---
title: "Практическая работа №4"
author: "Давыдова Дарья БИСО-01-20"
format: 
  md:
    output-file: README.md
editor: visual
---

Исследование метаданных DNS трафика

## Цель

1.  Закрепить практические навыки использования языка программирования R для обработки данных
2.  Закрепить знания основных функций обработки данных экосистемы tidyverse языка R
3.  Закрепить навыки исследования метаданных DNS трафика

## Исходные данные

1.  Ноутбук с ОС Windows 11
2.  RStudio
3.  Пакеты dplyr, tidyverse, readr
4.  dns.log
5.  header.csv

## Задание

Используя программный пакет dplyr, освоить анализ DNS логов с помощью языка программирования R.

## Ход работы

### Шаг 1. Подготовка данных

Для начала установим пакет `dplyr`

```{r}
library(dplyr)
```

1.  Импортируйте данные DNS

```{r}
library('dplyr')
library('tidyverse')
dns <- read_tsv("dns.log")

dns
```

2.  Добавьте пропущенные данные о структуре данных (назначении столбцов)

    В файле header.csv не хватает некоторых столбцов и данных о них, добавим их вручную.

```{r}
names(dns) <- c("ts", "uid", "id_or_h", "or_p", "id_re_h", "re_p","proto", "trans_id","query","qclass", "qclass_name", "qtype", "qtype_name", "rcode","rcode_name", "AA", "TC","RD","RA","Z","answer","TTLs","rejected")
```

3.  Преобразуйте данные в столбцах в нужный формат

```{r}
transform(dns, ts = as.ts(ts))
dns$ts <- dns$ts %>% as.ts()

```

4.  Просмотрите общую структуру данных с помощью функции glimpse()

    ```{r}
    data %>% glimpse()
    ```

### Шаг 2. Анализ данных

##### Задание 1. Сколько участников информационного обмена в сети Доброй Организации?

```{r}
select(dns,uid) %>% group_by(uid) %>% count() %>% nrow()

```

##### Задание 2. Какое соотношение участников обмена внутри сети и участников обращений к внешним ресурсам?

Диапазоны частных ip-адресов:

1.  10.0.0.0 - 10.255.255.255
2.  100.64.0.0 - 100.127.255.255
3.  172.16.0.0 - 172.31.255.255
4.  192.168.0.0 - 192.168.255.255

```{r}
#a <- filter(dns, query != '-',query == '(empty)') %>% group_by(uid) %>% count() %>% nrow()
a <- filter(dns, qtype_name == 'A'| qtype_name == 'AA' | qtype_name =='AAA' | qtype_name == 'AAAA') %>% group_by(uid) %>% count() %>% nrow() 
b <- filter(dns, qtype_name != 'A', qtype_name !='AA', qtype_name !='AAA', qtype_name !='AAAA') %>% group_by(uid) %>% count() %>% nrow()
#b <- filter(dns, query !='-',query != '(empty)') %>% group_by(uid) %>% count() %>% nrow()
b/a
```

##### Задание 3. Найдите топ-10 участников сети, проявляющих наибольшую сетевую активность

```{r}
select(dns,uid) %>% group_by(uid) %>% count() %>% arrange(desc(n)) %>% head(10)

```

##### Задание 4. Найдите топ-10 доменов, к которым обращаются пользователи сети и соответственное количество обращений

```{r}
top_dom <- dns %>% filter(query !='-', qtype_name == 'A'| qtype_name == 'AA' | qtype_name =='AAA' | qtype_name == 'AAAA') %>% select(query) %>% group_by(query) %>% count() %>% arrange(desc(n)) %>% head(10)
top_dom
```

##### Задание 5. Опеределите базовые статистические характеристики (функция summary()) интервала времени между последовательным обращениями к топ-10 доменам.

```{r}

summary(diff((dns %>% filter(tolower(query) %in% top_dom$query) %>% arrange(ts))$ts))
#dns %>% filter(query !='-',ts !='NA') %>% select(query,mean(ts)) %>% group_by(query) %>% count() %>% arrange(desc(n)) %>% head(10)
```

##### Задание 6. Часто вредоносное программное обеспечение использует DNS канал в качестве канала управления, периодически отправляя запросы на подконтрольный злоумышленникам DNS сервер. По периодическим запросам на один и тот же домен можно выявить скрытый DNS канал. Есть ли такие IP адреса в исследуемом датасете?

```{R}
t <- dns %>% group_by(id_or_h, query) %>% summarise(total = n()) %>% filter(total > 1)
unique(t$id_or_h)%>% head()

```

## Шаг 3. Обогащение данных

##### Определите местоположение (страну, город) и организацию-провайдера для топ-10 доменов. Для этого можно использовать сторонние сервисы, например https://v4.ifconfig.co.
    
1. teredo.ipv6.microsoft.com - США, Де-Мойн
2. tools.google.com - США, Маунтин-Вью
3. www.apple.com - США, Купертино
4. safebrowsing.clients.google.com - США, Маунтин-Вью
5. imap.gmail.com - США, Истон
6. stats.norton.com - Великобритания, Вашингтон
7. www.google.com - США, Моунтайн-Вью
8. ratings-wrs.symantec.com - США, Редмонд
9. api.twitter.com - США, Сан-Франциско
10. api.facebook.com - США, Менло-Парк

## Оценка результатов

Все поставленные задания были выполнены с помощью языка R и библиотеки `dplyr`

## Вывод

В ходе выполнения лабораторной работы были подготовлены, проанализированы и обогащены данные DNS трафика
