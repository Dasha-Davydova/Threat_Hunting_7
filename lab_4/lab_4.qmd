---
title: "Практическая работа №4"
author: "Давыдова Дарья БИСО-01-20"
format: 
  md:
    output-file: README.md
editor: visual
---

## Цель

1.  Закрепить практические навыки использования языка программирования R для обработки данных
2.  Закрепить знания основных функций обработки данных экосистемы tidyverse языка R
3.  Закрепить навыки исследования метаданных DNS трафика

## Исходные данные

1.  Ноутбук с ОС Windows 11
2.  RStudio
3.  Пакеты dplyr, tidyverse, readr
4.  dns.log
5.  header.csv

## Задание

Используя программный пакет dplyr, освоить анализ DNS логов с помощью языка программирования R.

## Ход работы

### Шаг 1. Подготовка данных

Установка пакета `dplyr`

```{r}
library(dplyr)
```

1.  Импортируйте данные DNS

```{r}
	dns = read.csv("dns.log", header = FALSE, sep = "\t", encoding = "UTF-8")
	dns %>% glimpse()
```

2.  Добавьте пропущенные данные о структуре данных (назначении столбцов)

    В файле header.csv не хватает некоторых столбцов и данных о них, добавим их вручную.

```{r}
names(dns) <- c("ts", "uid", "id_or_h", "or_p", "id_re_h", "re_p","proto", "trans_id","query","qclass", "qclass_name", "qtype", "qtype_name", "rcode","rcode_name", "AA", "TC","RD","RA","Z","answer","TTLs","rejected")
```

3.  Преобразуйте данные в столбцах в нужный формат

```{r}
transform(dns, ts = as.ts(ts))
dns$ts <- dns$ts %>% as.ts()

```

4.  Просмотрите общую структуру данных с помощью функции glimpse()

```{r}
	dns %>% glimpse()
```

### Шаг 2. Анализ данных

##### Задание 1. Сколько участников информационного обмена в сети Доброй Организации?

```{r}
or_h <- unique(dns$`id_or_h`)
re_h <- unique(dns$`id_re_h`)

hosts <- c(or_h, re_h)

hosts %>%
  unique() %>%
  length()
```

##### Задание 2. Какое соотношение участников обмена внутри сети и участников обращений к внешним ресурсам?

Диапазоны частных ip-адресов:

1.  10.0.0.0 - 10.255.255.255
2.  100.64.0.0 - 100.127.255.255
3.  172.16.0.0 - 172.31.255.255
4.  192.168.0.0 - 192.168.255.255

```{r}
internal_ip_pattern <- c("192.168.", "10.", "100.([6-9]|1[0-1][0-9]|12[0-7]).", "172.((1[6-9])|(2[0-9])|(3[0-1])).")
internal_ips <- hosts[grep(paste(internal_ip_pattern, collapse = "|"), hosts)]
internal_ips_cnt <- sum(hosts %in% internal_ips)
external_ips_cnt <- length(hosts) - internal_ips_cnt

ratio <- internal_ips_cnt / external_ips_cnt
ratio
```

##### Задание 3. Найдите топ-10 участников сети, проявляющих наибольшую сетевую активность

```{r}
top_hosts <- dns %>%
  group_by(id_or_h) %>%
  summarise(request_count = n()) %>%
  arrange(desc(request_count)) %>%
  top_n(10, request_count)

print(top_hosts)
```

##### Задание 4. Найдите топ-10 доменов, к которым обращаются пользователи сети и соответственное количество обращений

```{r}
top_domains <- dns %>%
  group_by(query) %>%
  summarise(request_count = n()) %>%
  arrange(desc(request_count)) %>%
  top_n(10, request_count)

print(top_domains)
```

##### Задание 5. Опеределите базовые статистические характеристики (функция summary()) интервала времени между последовательным обращениями к топ-10 доменам.

```{r}
top_domains_filtered <- dns %>% 
  filter(tolower(query) %in% top_domains$query) %>%
  arrange(ts)
time_intervals <- diff(top_domains_filtered$ts)

summary(time_intervals)
```

##### Задание 6. Часто вредоносное программное обеспечение использует DNS канал в качестве канала управления, периодически отправляя запросы на подконтрольный злоумышленникам DNS сервер. По периодическим запросам на один и тот же домен можно выявить скрытый DNS канал. Есть ли такие IP адреса в исследуемом датасете?

```{r}
ip_domain_counts <- dns %>%
  group_by(ip = `id_or_h`, query) %>%
  summarise(request_count = n()) %>%
  filter(request_count > 1)
```

```{r}
unique_ips_with_periodic_requests <- unique(ip_domain_counts$ip)

unique_ips_with_periodic_requests %>% length()
unique_ips_with_periodic_requests %>% head()
```

## Шаг 3. Обогащение данных

##### Определите местоположение (страну, город) и организацию-провайдера для топ-10 доменов. Для этого можно использовать сторонние сервисы, например https://v4.ifconfig.co.

```{r}
top_domains
```

1.teredo.ipv6.microsoft.com	
2.tools.google.com	
3.www.apple.com	
4.time.apple.com	
5.safebrowsing.clients.google.com	
6.*\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00	
7.WPAD	
8.44.206.168.192.in-addr.arpa	
9.HPE8AA67	
10.ISATAP

## Оценка результатов

Все поставленные задания были выполнены с помощью языка R и библиотеки `dplyr`

## Вывод

В ходе выполнения лабораторной работы были подготовлены, проанализированы и обогащены данные DNS трафика
